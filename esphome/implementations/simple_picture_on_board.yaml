esphome:
  name: epaperdisplay
  on_boot:
    priority: -10
    then:
      - logger.log: "before my_display"
      - component.update: my_display
      - logger.log: "changed, hopefully"

# Add global variables
globals:
  - id: show_qr
    type: bool
    initial_value: 'false'

# Add button configuration
binary_sensor:
  - platform: gpio
    pin:
      number: GPIO27
      mode: INPUT_PULLUP
    name: "Display Toggle"
    id: toggle_button
    on_press:
      then:
        - logger.log: "Button pressed, toggling display"
        - globals.set:
            id: show_qr
            value: !lambda "return !id(show_qr);"
        - component.update: my_display

spi:
  clk_pin: $clk_pin # SCK
  mosi_pin: $mosi_pin # SPI DIN

logger:
  baud_rate: 115200
  level: VERY_VERBOSE

debug:
  update_interval: 2s

sensor:
  - platform: debug
    free:
      name: "Heap Free"
    block:
      name: "Heap Max Block"

image:
  - file: images/960x680/test.png
    id: my_image
    resize: 960x680
    type: BINARY
    dither: FLOYDSTEINBERG
  - file: images/960x680/wifi_setup.png
    id: wifi_setup_image
    resize: 960x680
    type: BINARY
    dither: FLOYDSTEINBERG

display:
  - platform: waveshare_epaper
    id: my_display

    cs_pin: $cs_pin          # Chip Select (CS)
    dc_pin: $dc_pin            # Data/Command (DC)
    busy_pin:
      number: $busy_pin
      inverted: $busy_pin_inverted
    reset_pin: $reset_pin         # Reset (RST)

    reset_duration: 200ms

    model: $waveshare_model
    update_interval: never
    lambda: |-
      if (id(show_qr)) {
        it.image(0, 0, id(wifi_setup_image), Color::BLACK, Color::WHITE);
        ESP_LOGD("display", "WiFi setup image displayed");
      } else {
        it.image(0, 0, id(my_image), Color::BLACK, Color::WHITE);
        ESP_LOGD("display", "Main image displayed successfully");
      }

font:
  - file: "gfonts://Roboto"
    id: display_font
    size: 20
